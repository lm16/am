<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.uni.am.mapper.AmAdjustmentApprovalMapper">
  <resultMap id="BaseResultMap" type="edu.uni.am.domain.AmAdjustmentApproval">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="class_adjustment_id" jdbcType="BIGINT" property="classAdjustmentId" />
    <result column="employee_id" jdbcType="BIGINT" property="employeeId" />
    <result column="result" jdbcType="CHAR" property="result" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="pre_approval_id" jdbcType="BIGINT" property="preApprovalId" />
    <result column="datetime" jdbcType="TIMESTAMP" property="datetime" />
    <result column="by_who" jdbcType="BIGINT" property="byWho" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, class_adjustment_id, employee_id, result, content, pre_approval_id, datetime, 
    by_who, deleted
  </sql>
  <select id="selectByExample" parameterType="edu.uni.am.domain.AmAdjustmentApprovalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from am_adjustment_approval
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from am_adjustment_approval
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from am_adjustment_approval
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.uni.am.domain.AmAdjustmentApprovalExample">
    delete from am_adjustment_approval
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.uni.am.domain.AmAdjustmentApproval">
    insert into am_adjustment_approval (id, class_adjustment_id, employee_id, 
      result, content, pre_approval_id, 
      datetime, by_who, deleted
      )
    values (#{id,jdbcType=BIGINT}, #{classAdjustmentId,jdbcType=BIGINT}, #{employeeId,jdbcType=BIGINT}, 
      #{result,jdbcType=CHAR}, #{content,jdbcType=VARCHAR}, #{preApprovalId,jdbcType=BIGINT}, 
      #{datetime,jdbcType=TIMESTAMP}, #{byWho,jdbcType=BIGINT}, #{deleted,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.uni.am.domain.AmAdjustmentApproval">
    insert into am_adjustment_approval
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="classAdjustmentId != null">
        class_adjustment_id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="result != null">
        result,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="preApprovalId != null">
        pre_approval_id,
      </if>
      <if test="datetime != null">
        datetime,
      </if>
      <if test="byWho != null">
        by_who,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="classAdjustmentId != null">
        #{classAdjustmentId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="result != null">
        #{result,jdbcType=CHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="preApprovalId != null">
        #{preApprovalId,jdbcType=BIGINT},
      </if>
      <if test="datetime != null">
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null">
        #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.uni.am.domain.AmAdjustmentApprovalExample" resultType="java.lang.Integer">
    select count(*) from am_adjustment_approval
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update am_adjustment_approval
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.classAdjustmentId != null">
        class_adjustment_id = #{record.classAdjustmentId,jdbcType=BIGINT},
      </if>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=BIGINT},
      </if>
      <if test="record.result != null">
        result = #{record.result,jdbcType=CHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.preApprovalId != null">
        pre_approval_id = #{record.preApprovalId,jdbcType=BIGINT},
      </if>
      <if test="record.datetime != null">
        datetime = #{record.datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.byWho != null">
        by_who = #{record.byWho,jdbcType=BIGINT},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update am_adjustment_approval
    set id = #{record.id,jdbcType=BIGINT},
      class_adjustment_id = #{record.classAdjustmentId,jdbcType=BIGINT},
      employee_id = #{record.employeeId,jdbcType=BIGINT},
      result = #{record.result,jdbcType=CHAR},
      content = #{record.content,jdbcType=VARCHAR},
      pre_approval_id = #{record.preApprovalId,jdbcType=BIGINT},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      by_who = #{record.byWho,jdbcType=BIGINT},
      deleted = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.uni.am.domain.AmAdjustmentApproval">
    update am_adjustment_approval
    <set>
      <if test="classAdjustmentId != null">
        class_adjustment_id = #{classAdjustmentId,jdbcType=BIGINT},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="result != null">
        result = #{result,jdbcType=CHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="preApprovalId != null">
        pre_approval_id = #{preApprovalId,jdbcType=BIGINT},
      </if>
      <if test="datetime != null">
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null">
        by_who = #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uni.am.domain.AmAdjustmentApproval">
    update am_adjustment_approval
    set class_adjustment_id = #{classAdjustmentId,jdbcType=BIGINT},
      employee_id = #{employeeId,jdbcType=BIGINT},
      result = #{result,jdbcType=CHAR},
      content = #{content,jdbcType=VARCHAR},
      pre_approval_id = #{preApprovalId,jdbcType=BIGINT},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      by_who = #{byWho,jdbcType=BIGINT},
      deleted = #{deleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>