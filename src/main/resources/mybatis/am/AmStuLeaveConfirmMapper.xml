<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.uni.am.mapper.AmStuLeaveConfirmMapper">
  <resultMap id="BaseResultMap" type="edu.uni.am.domain.AmStuLeaveConfirm">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="university_id" jdbcType="BIGINT" property="universityId" />
    <result column="stu_absence_id" jdbcType="BIGINT" property="stuAbsenceId" />
    <result column="student_id" jdbcType="BIGINT" property="studentId" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="datetime" jdbcType="TIMESTAMP" property="datetime" />
    <result column="by_who" jdbcType="BIGINT" property="byWho" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="leave_bar_id" jdbcType="BIGINT" property="leaveBarId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, university_id, stu_absence_id, student_id, status, datetime, by_who, deleted, 
    leave_bar_id
  </sql>
  <select id="selectByExample" parameterType="edu.uni.am.domain.AmStuLeaveConfirmExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from am_stu_leave_confirm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from am_stu_leave_confirm
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from am_stu_leave_confirm
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="edu.uni.am.domain.AmStuLeaveConfirmExample">
    delete from am_stu_leave_confirm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.uni.am.domain.AmStuLeaveConfirm">
    insert into am_stu_leave_confirm (id, university_id, stu_absence_id, 
      student_id, status, datetime, 
      by_who, deleted, leave_bar_id
      )
    values (#{id,jdbcType=BIGINT}, #{universityId,jdbcType=BIGINT}, #{stuAbsenceId,jdbcType=BIGINT}, 
      #{studentId,jdbcType=BIGINT}, #{status,jdbcType=CHAR}, #{datetime,jdbcType=TIMESTAMP}, 
      #{byWho,jdbcType=BIGINT}, #{deleted,jdbcType=INTEGER}, #{leaveBarId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.uni.am.domain.AmStuLeaveConfirm">
    insert into am_stu_leave_confirm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="universityId != null">
        university_id,
      </if>
      <if test="stuAbsenceId != null">
        stu_absence_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="datetime != null">
        datetime,
      </if>
      <if test="byWho != null">
        by_who,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="leaveBarId != null">
        leave_bar_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="universityId != null">
        #{universityId,jdbcType=BIGINT},
      </if>
      <if test="stuAbsenceId != null">
        #{stuAbsenceId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="datetime != null">
        #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null">
        #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
      <if test="leaveBarId != null">
        #{leaveBarId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.uni.am.domain.AmStuLeaveConfirmExample" resultType="java.lang.Integer">
    select count(*) from am_stu_leave_confirm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update am_stu_leave_confirm
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.universityId != null">
        university_id = #{record.universityId,jdbcType=BIGINT},
      </if>
      <if test="record.stuAbsenceId != null">
        stu_absence_id = #{record.stuAbsenceId,jdbcType=BIGINT},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.datetime != null">
        datetime = #{record.datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.byWho != null">
        by_who = #{record.byWho,jdbcType=BIGINT},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
      <if test="record.leaveBarId != null">
        leave_bar_id = #{record.leaveBarId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update am_stu_leave_confirm
    set id = #{record.id,jdbcType=BIGINT},
      university_id = #{record.universityId,jdbcType=BIGINT},
      stu_absence_id = #{record.stuAbsenceId,jdbcType=BIGINT},
      student_id = #{record.studentId,jdbcType=BIGINT},
      status = #{record.status,jdbcType=CHAR},
      datetime = #{record.datetime,jdbcType=TIMESTAMP},
      by_who = #{record.byWho,jdbcType=BIGINT},
      deleted = #{record.deleted,jdbcType=INTEGER},
      leave_bar_id = #{record.leaveBarId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.uni.am.domain.AmStuLeaveConfirm">
    update am_stu_leave_confirm
    <set>
      <if test="universityId != null">
        university_id = #{universityId,jdbcType=BIGINT},
      </if>
      <if test="stuAbsenceId != null">
        stu_absence_id = #{stuAbsenceId,jdbcType=BIGINT},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="datetime != null">
        datetime = #{datetime,jdbcType=TIMESTAMP},
      </if>
      <if test="byWho != null">
        by_who = #{byWho,jdbcType=BIGINT},
      </if>
      <if test="deleted != null">
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="leaveBarId != null">
        leave_bar_id = #{leaveBarId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.uni.am.domain.AmStuLeaveConfirm">
    update am_stu_leave_confirm
    set university_id = #{universityId,jdbcType=BIGINT},
      stu_absence_id = #{stuAbsenceId,jdbcType=BIGINT},
      student_id = #{studentId,jdbcType=BIGINT},
      status = #{status,jdbcType=CHAR},
      datetime = #{datetime,jdbcType=TIMESTAMP},
      by_who = #{byWho,jdbcType=BIGINT},
      deleted = #{deleted,jdbcType=INTEGER},
      leave_bar_id = #{leaveBarId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>